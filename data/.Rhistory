stargazer(lockout_lm, without_lockout_lm, type = 'latex',
title = "Consider the 11-12 NBA Season",
notes = "(1) Includes 11-12 NBA Season. (2) Omits 11-12 NBA Season")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# import libs
library(tidyverse)
library(readxl)
library(stargazer)
library(kableExtra)
library(fastDummies)
library(aod)
df_combo <- read_excel("BDB_Combo.xlsx")
df_player <- read_excel("BDB_Player.xlsx")
colnames(df_player) <- c('DATASET', 'DATE', 'PLAYER FULL NAME', 'POSITION', 'OWN TEAM',
'OPP TEAM', 'VENUE', 'MIN', 'FG', 'FGA', '3P', '3PA', 'FT', 'FTA', 'OR',
'DR', 'TOT', 'A', 'PF', 'ST', 'TO', 'BL', 'PTS', 'PER', 'DATE-DIFF',
'RR VAL', 'RR SERIES', 'S_PER', 'I_PER', 'SAME_CITY', 'TRAVEL',
'1_days', '10_days', '11_days', '12_days', '13_days',
'14+_days', '14_days', '2_days', '3_days', '4_days', '5_days',
'6_days', '7_days', '8_days', '9_days', 'Season_Start',
'H', 'R', 'H-M1', 'H-M2', 'H-M3', 'R-M1', 'R-M2', 'R-M3', 'M1', 'M2',
'M3', 'S_OEFF', 'S_DEFF', 'I_OEFF', 'I_DEFF','Bubble')
# Omit - Bubble
df_player <- df_player %>% filter( DATASET != '2019-2020 Regular Season') %>% mutate(
PER_diff = PER - I_PER,
M1_sq = M1^2,
M1_cu = M1^3,
M2_sq = M2^2,
M2_cu = M2^3
)
DATASET != '2011-2012 Regular Season') %>% lm(
lockout_lm = lm(
data = df_player,
PER_diff ~ H+TRAVEL+I_OEFF+I_DEFF+M1 + M1_sq + M1_cu
)
DATASET != '2011-2012 Regular Season') %>% lm(
without_lockout_lm <- df_player %>% filter( DATASET != '2011-2012 Regular Season') %>% lm(
PER_diff ~ H+TRAVEL+I_OEFF+I_DEFF+M1+ M1_sq + M1_cu, data = .
)
df_player <- read_excel("BDB_Player_v2.xlsx")
df_player <- read_excel("BDB_Player_v2.xlsx")
df_combo <- read_excel("BDB_Combo.xlsx")
colnames(df_player)
head(df_player)
colnames(df_player)
?rename
what_i_want <- c("DATASET","DATE", "PLAYER FULL NAME", "VENUE", "MIN", "PER","AVG_PER","OMIT_PER", "SAME CITY",
"H", "TRAVEL","1.0 days", "M1", "M2", "M3", "OEFF - All games", "DEFF - All games",
"OEFF - Not included","DEFF - Not included", "Bubble", "Venue -1", "Dummy at Home Yesterday", "Close game -1","Dummy Close Game", "Avg Min", "Avg Min (excluding -1)")
df_player <- df_player %>% select(what_i_want)
df_player <- df_player %>% select( names %in% what_i_want)
df_player <- df_player %>% select( colnames %in% what_i_want)
df_player <- df_player %>% select( what_i_want)
View(df_player)
# Filter out Bubble, calculate PER_diff, include polynomial regressions
df_player <- df_player %>% filter( DATASET != '2019-2020 Regular Season') %>% mutate(
PER_diff = PER - I_PER,
M1_sq = M1^2,
M1_cu = M1^3,
M2_sq = M2^2,
M2_cu = M2^3,
M1.IV.Avg.Min.Sq = `Avg Min`^2
)
# Filter out Bubble, calculate PER_diff, include polynomial regressions
df_player <- df_player %>% filter( DATASET != '2019-2020 Regular Season') %>% mutate(
PER_diff = PER - OMIT_PER,
M1_sq = M1^2,
M1_cu = M1^3,
M2_sq = M2^2,
M2_cu = M2^3,
M1.IV.Avg.Min.Sq = `Avg Min`^2
)
df_player <- read_excel("BDB_Player_v2.xlsx")
View(df_player)
what_i_want <- c("DATASET","DATE", "PLAYER FULL NAME", "OWN TEAM","VENUE", "MIN", "PER","AVG_PER","OMIT_PER", "SAME CITY",
"H", "TRAVEL","1.0 days", "M1", "M2", "M3", "OEFF - All games", "DEFF - All games",
"OEFF - Not included","DEFF - Not included", "Bubble", "Venue -1", "Dummy at Home Yesterday", "Close game -1","Dummy Close Game", "Avg Min", "Avg Min (excluding -1)")
df_player <- df_player %>% select( what_i_want)
# Filter out Bubble, calculate PER_diff, include polynomial regressions
df_player <- df_player %>% filter( DATASET != '2019-2020 Regular Season') %>% mutate(
PER_diff = PER - OMIT_PER,
M1_sq = M1^2,
M1_cu = M1^3,
M2_sq = M2^2,
M2_cu = M2^3,
M1.IV.Avg.Min.Sq = `Avg Min`^2
)
# Merge with for Team Last played
df_combo <- df_combo %>% rename(
'OWN TEAM' = 'TEAMS',
'TEAM_OEFF' = 'OEFF',
'TEAM_DEFF' = 'DEFF',
'TEAM_REST_DAYS' = 'REST DAYS',
'TDF'= 'DATE-DIFF'
)
df_combo <- df_combo %>% select(
c('DATASET', 'DATE', 'OWN TEAM', 'VENUE','TEAM_OEFF', 'TEAM_DEFF', 'TEAM_REST_DAYS', 'TDF')
)
df_final <- merge(df_combo, df_player, by = c("DATASET","DATE","OWN TEAM","VENUE"))
df_final <- dummy_cols(df_final, select_columns = "TDF")
df_final <- df_final %>% rename(
'TDF_1' = 'TDF_1.0 days',
'TDF_2' = 'TDF_2.0 days'
)
?aer::ivreg
?AER::ivreg
stargazer(base.lm, without_lockout_lm,
type = 'text',
title = "Consider the 11-12 NBA Season",
notes = "(1) Includes 11-12 NBA Season. (2) Omits 11-12 NBA Season")
base.lm = lm(
data = df_final,
PER_diff ~ H+TRAVEL+`OEFF - Not included`+`DEFF - Not included`+M1 + M1_sq + M1_cu
)
without_lockout_lm <- df_final %>% filter( DATASET != '2011-2012 Regular Season') %>% lm(
PER_diff ~ H+TRAVEL+`OEFF - Not included`+`DEFF - Not included`+M1+ M1_sq + M1_cu, data = .
)
M1.M2 <- lm(
data = df_final,
PER_diff ~ H+TRAVEL+`OEFF - Not included`+`DEFF - Not included`+M1 + M1_sq + M1_cu + M2
)
stargazer(base.lm, without_lockout_lm,
type = 'text',
title = "Consider the 11-12 NBA Season",
notes = "(1) Includes 11-12 NBA Season. (2) Omits 11-12 NBA Season")
```{r mylatextable warnings=FALSE}
stargazer(base.lm, without_lockout_lm,
type = 'text',
title = "Consider the 11-12 NBA Season",
notes = "(1) Includes 11-12 NBA Season. (2) Omits 11-12 NBA Season")
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
install.packages(c("blob", "brew", "broom", "car", "carData", "caret", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "countrycode", "crayon", "desc", "dplyr", "dtplyr", "evaluate", "fansi", "foreach", "future", "future.apply", "gdata", "generics", "ggplot2", "globals", "glue", "googleway", "gower", "gplots", "gtools", "haven", "Hmisc", "htmlTable", "httpuv", "httr", "igraph", "iterators", "jqr", "jsonlite", "jtools", "knitr", "lfe", "lme4", "lmtest", "magrittr", "maptools", "MatchIt", "matrixStats", "nloptr", "openssl", "pander", "parallelly", "pillar", "plyr", "polynom", "prettymapr", "processx", "ps", "quantreg", "raster", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "recipes", "rgdal", "rjson", "rlang", "rmarkdown", "roxygen2", "rprojroot", "sass", "scales", "sf", "shinyWidgets", "sp", "styler", "terra", "testthat", "textdata", "tibble", "tidygraph", "tidyr", "tidyselect", "tidytext", "tinytex", "tzdb", "udpipe", "units", "uuid", "vctrs", "waldo", "webshot", "withr", "wk", "xfun", "yaml", "zoo"))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# import libs
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
